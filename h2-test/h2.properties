entity.output.folder=/Users/patrik/IdeaProjects/springdaogen/integrationtests/src/test/java
entity.output.package=dbtests.h2.model
entity.output.prefix=
entity.created_at_names=created_at
entity.changed_at_names=changed_at
dao.output.folder=/Users/patrik/IdeaProjects/springdaogen/integrationtests/src/test/java
dao.output.package=dbtests.h2.model
dao.output.prefix=
dao.output.suffix=Repo
framework.output.folder=/Users/patrik/IdeaProjects/springdaogen/integrationtests/src/test/java
framework.output.package=dbtests.framework
max.select.all.count=10
# Yes we use Postgres. The use case is to generate the daos
# from a "real" database and then have the daos and
# entities compatible with H2 in tests
database.driver=org.postgresql.Driver
database.url=jdbc:postgresql://localhost:4007/docker
database.user=docker
database.password=docker
database.dialect=POSTGRES
database.name=docker
test.generate_ddl=true
test.resource_folder=/Users/patrik/IdeaProjects/springdaogen/integrationtests/src/test/resources
