-- Intentionally written a little quirky to provoke code generator

CREATE USER DOCKER
    IDENTIFIED BY password
    QUOTA 50M ON SYSTEM;

GRANT create session TO DOCKER;
GRANT create table TO DOCKER;
GRANT create view TO DOCKER;
GRANT create any trigger TO DOCKER;
GRANT create any procedure TO DOCKER;
GRANT create sequence TO DOCKER;
GRANT create synonym TO DOCKER;

CREATE SEQUENCE DOCKER.BAZ_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE DOCKER.BAZ_ORACLE (
    id NUMBER(9) NOT NULL,
    name VARCHAR(30) NOT NULL,
    CONSTRAINT BAZ_ORACLE_PK PRIMARY KEY (id)
);


-- No identity functionality in Oracle 11c. And no 
-- Express edition of Oracle 12c on Docker hub. 
-- Hence this trigger.
CREATE OR REPLACE TRIGGER DOCKER.baz_trg 
BEFORE INSERT ON DOCKER.BAZ_ORACLE 
FOR EACH ROW
WHEN (new.id IS NULL)
BEGIN
    :new.id := DOCKER.BAZ_SEQ.NEXTVAL;
END;
/


CREATE SEQUENCE DOCKER.ONE_COL_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE DOCKER.ONE_COLUMN_GENERATED_ID_ORACLE (
    id NUMBER(9) NOT NULL,
    CONSTRAINT ONE_COL_ORACLE_PK PRIMARY KEY (id)
);


CREATE OR REPLACE TRIGGER DOCKER.one_col_trg 
BEFORE INSERT ON DOCKER.ONE_COLUMN_GENERATED_ID_ORACLE 
FOR EACH ROW
WHEN (new.id IS NULL)
BEGIN
    :new.id := DOCKER.ONE_COL_SEQ.NEXTVAL;
END;
/


CREATE TABLE DOCKER.ONE_COLUMN_NATURAL_ID_ORACLE (
    id VARCHAR(9) NOT NULL,
    CONSTRAINT ONE_COL_NAT_ORACLE_PK PRIMARY KEY (id)
);


CREATE TABLE DOCKER.DATA_TYPES_ORACLE (
	ID VARCHAR2(100),
	"VARCHAR" VARCHAR(100),
	"VARCHAR2" VARCHAR2(100),
	CHAR10 CHAR(10),
	CHAR1 CHAR(1),
	"BINARY_DOUBLE" BINARY_DOUBLE,
	"BINARY_FLOAT" BINARY_FLOAT,
	"BLOB" BLOB,
	"CLOB" CLOB,
	"DATE" DATE,
	"TIMESTAMP" TIMESTAMP,
	NUMBER_TEN_TWO NUMBER(10, 2),
	NUMBER_NINE_ZERO NUMBER(9, 0), -- Fits in int
	NUMBER_TEN_ZERO NUMBER(10, 0), -- Does not fit in int but fits in long
	NUMBER_EIGHTEEN_ZERO NUMBER(18, 0), -- Fits in long
	NUMBER_NINETEEN_ZERO NUMBER(19, 0), -- Does not fit in long
	CONSTRAINT DATA_TYPES_ORACLE_PK PRIMARY KEY (ID)
);
